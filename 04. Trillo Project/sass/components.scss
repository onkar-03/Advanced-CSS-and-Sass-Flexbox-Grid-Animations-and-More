// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

// SEARCH
.search {
  flex: 0 0 40%;

  // Centering icon inside the search bar
  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    // font-family & font-size are not inherited by input elements
    // hence declaring it as inherit
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    border-radius: 100px;

    //To make the icon move inside the search bar
    margin-right: -3rem;

    // Width 90% of parents width
    width: 90%;
    transition: all 0.2s;

    // Increase Search bar width on focus
    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // '+' Adjacent Sibling Selector
  // Changing the background color to same as that of the search icon when the search bar is focussed
  // Doing it separately as we want the color to change when the input field is focussed and not just the icon
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }
    &:active {
      transform: translateY(0.2rem);
    }
  }

  &__icon {
    // Formatting SVG Icons
    // Simply set the Height an Width
    height: 2rem;
    width: 2rem;

    // Changing Color of the SVG Icons
    fill: var(--color-grey-dark-3);
  }
}

// USER NAVIGATION
.user-nav {
  display: flex;
  justify-content: center;
  align-items: center;

  // Aligning the Items to take the full width of the container
  align-self: stretch;

  // Applying style to all the direct children of user-nav
  // & > * : means all the direct children of the user-nav
  & > * {
    padding: 0rem 2rem;
    cursor: pointer;

    // As the user-nav takes 100% of the width bcoz of stretch we want the items to to take the same width
    height: 100%;
  }
  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    // Centering the Items vertically and horizontally
    display: flex;
    justify-content: center;
    align-items: center;

    // Relative parent positioning for notification
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;

    // Changing color fo the SVG Icons
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    width: 1.75rem;
    height: 1.75rem;
    border-radius: 100px;
    background-color: var(--color-primary);
    color: white;

    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // Using flexbox to center the notification text as well
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user {
    // Centering the Items vertically and horizontally
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    width: 3.75rem;
    margin-right: 1rem;
    border-radius: 50%;
  }
}

// SIDE BAR

.sidebar {
  // Pushing the legal text ar the very bottom vertically
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
  }

  // Applying the hover effect on the navigation
  // Using the before pseudo element & absolute positioning
  // Initial scale in Y is 0
  &__item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);

    // transition origin of animation default is center
    // transform-origin: bottom;

    // Animation
    // Adding delay of .2s for the width animation
    // Added a cubic bezier time function for the transition
    transition: transform 0.3s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  // Changing the color on active state
  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-transform: uppercase;
    text-decoration: none;
    display: block;
    padding: 1.5rem 3rem;

    // Placing the Links above the sliding transition
    // Setting a z-index and it only applies when the position is specified
    z-index: 10;
    position: relative;

    // Centering the Text and the SVG Icons Vertically
    display: flex;
    align-items: center;
  }
  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    // Current color states that the same color as that of the parent should be used
    // works the same way Just like inherit
    // Parent link color : grey-light-1
    fill: currentColor;
  }
}

// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  text-align: center;
  padding: 2.5rem;
  color: var(--color-grey-light-4);
}

// GALLERY
.gallery {
  display: flex;

  &__photo {
    width: 100%;

    // To remove any white spaces between the images as block level elements dont allow other elements along their side horizontally
    // display: block;
  }
}

// OVERVIEW
.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);
  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    letter-spacing: 0.1rem;
    padding: 1.5rem 3rem;
    text-transform: uppercase;
  }
  &__stars {
    // want the layout to have the stars close to the heading and the location at the extreme right
    // Using the Margin right trick to make the content take only the space required and also push the rest of the elements at the extreme right
    margin-right: auto;

    // SVG Stars have a default space at the bottom of them which needs to be nullified
    // Way 1 : assign them as flex
    // WAY 2 : line height and font-size as '0'
    display: flex;
  }
  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }
  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    margin-left: 3rem;
    color: white;
    align-self: stretch;
    padding: 0 2.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -0.3rem;
  }
  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

// BUTTON
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding: 0.2rem;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    color: var(--color-grey-dark-1);
  }

  &:focus {
    outline: none;
    // Infinite animation on focus mode
    animation: pulsate 1s infinite;
  }
}

// Animation on location focus
@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4 rem rgba(0, 0, 0, 0.25);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}
